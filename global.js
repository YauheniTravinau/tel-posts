document.getElementById("messageForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –õ–æ—Ç ‚Ññ
    const lotNumber = generateLotNumber();

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ñ–æ—Ä–º—ã
    const token = "7617087572:AAGUoDl8RN4ZusU50GPuFc-rTCOWWJoi8jE";
    const chatId = "-1002482588195";

    const warning = document.getElementById("warning").value;
    const customWarning = document.getElementById("customWarning").value;
    const status = document.getElementById("status").value;
    const productTitle = document.getElementById("productTitle").value;
    const productDescription = document.getElementById("productDescription").value;
    const price = document.getElementById("price").value;
    const weight = document.getElementById("weight").value;
    const purchaseStatus = document.getElementById("purchaseStatus").value;
    const warehouse = document.getElementById("warehouse").value;
    const customWarehouse = document.getElementById("customWarehouse").value;
    const productLink = document.getElementById("productLink").value;
    const photosInput = document.getElementById("photos");
    const photos = photosInput ? photosInput.files : [];

    const finalWarning = warning === "–î—Ä—É–≥–æ–µ" ? "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> " + customWarning : warning.replace("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:", "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b>");
    const finalWarehouse = warehouse === "–î—Ä—É–≥–æ–µ" ? customWarehouse : warehouse;

    let message = `
${finalWarning}

<b>–õ–æ—Ç ‚Ññ:</b> ${lotNumber}

<b>üîî ${productTitle}</b>
`;

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (productDescription) {
        message += `<b>üìù –æ–ø–∏—Å–∞–Ω–∏–µ:</b> ${productDescription}\n`;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if (price) {
        message += `<b>üí≤ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞:</b> ${price}\n`;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Å–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (weight) {
        message += `<b>üì¶ –í–µ—Å –≥—Ä—É–∑–∞:</b> ${weight}\n`;
    }

    // –°—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∫–∏
    message += `${purchaseStatus}\n`;

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    message += `<b>üìç –°–∫–ª–∞–¥:</b> ${finalWarehouse}\n`;

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if (productLink) {
        message += `<b>üîó <a href="${productLink}" target="_blank">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a></b>\n`;
    }

    message += `<b>üí¨ –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ —Å–≤–æ–∏ —Ü–µ–Ω—ã –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b> @TORGGB

<b>${status === "üü¢ –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –Ω–∞–π–¥–µ–Ω" ? "üü¢üü¢üü¢ –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –Ω–∞–π–¥–µ–Ω üü¢üü¢üü¢" : "üöõ –ò—â–µ–º –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞"}</b> 
`;

    if (photos.length > 0) {
        const formData = new FormData();
        formData.append("chat_id", chatId);
        formData.append("caption", message);
        formData.append("parse_mode", "HTML");

        for (let i = 0; i < photos.length; i++) {
            formData.append("photo", photos[i]);
        }

        fetch(`https://api.telegram.org/bot${token}/sendPhoto`, {
            method: "POST",
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.ok) {
                    showMessage();
                    resetForm();
                }
            })
            .catch(error => console.error("–û—à–∏–±–∫–∞:", error));
    } else {
        fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: "HTML"
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.ok) {
                    showMessage();
                    resetForm();
                }
            })
            .catch(error => console.error("–û—à–∏–±–∫–∞:", error));
    }
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ
function showMessage() {
    let msgBox = document.getElementById("messageSent");
    if (!msgBox) {
        msgBox = document.createElement("div");
        msgBox.id = "messageSent";
        msgBox.style.color = "green";
        msgBox.style.marginTop = "10px";
        msgBox.textContent = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!";
        document.getElementById("messageForm").appendChild(msgBox);
    } else {
        msgBox.textContent = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!";
    }

    // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
        msgBox.remove();
    }, 5000);
}


// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –õ–æ—Ç ‚Ññ
function generateLotNumber() {
    return Math.floor(1000000 + Math.random() * 9000000).toString();
}

// –ü–æ–ª—è "–î—Ä—É–≥–æ–µ" –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
document.getElementById("warning").addEventListener("change", function() {
    toggleCustomField("warning", "customWarning");
});

document.getElementById("warehouse").addEventListener("change", function() {
    toggleCustomField("warehouse", "customWarehouse");
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ "–î—Ä—É–≥–æ–µ"
function toggleCustomField(selectId, customFieldId) {
    const selectElement = document.getElementById(selectId);
    const customField = document.getElementById(customFieldId);
    customField.style.display = selectElement.value === "–î—Ä—É–≥–æ–µ" ? "block" : "none";
}

// –°–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
function resetForm() {
    const form = document.getElementById("messageForm");
    form.reset();

    // –°–∫—Ä—ã—Ç–∏–µ –ø–æ–ª–µ–π "–î—Ä—É–≥–æ–µ" –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞
    document.getElementById("customWarning").style.display = "none";
    document.getElementById("customWarehouse").style.display = "none";
}
